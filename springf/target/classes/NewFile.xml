<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	xmlns:context="http://www.springframework.org/schema/context">


	<!-- <description> Dependency injection using the bean 
		definition steps : 1. Define beans here , which should have id=interface 
		name , and class = class implementing that interface 2. define bean here 
		3. (interface)contecty.getbean(class) in main app </description> -->
	<!-- <bean id="vehicle" class="com.prasad.springf.Bike"></bean> -->

	<!-- <description> Dependency injection using annotation steps: 1.Add @Component 
		annotation in Class 2.define getter setter in class define property for which 
		you have implemented getter setter in class </description>  -->
		
	<!-- 	<description>
		With getter setter
		</description>
	<context:component-scan
		base-package="com.prasad.springf"></context:component-scan>  -->
		
	<!--	Dependency inj. using bean property
		<bean id="tyre" 
		class="com.prasad.springf.Tyre"> <property name="brandName" value="MRF"> 
		</property> </bean> -->

		<description>
		Dependency injection With  constructor injection, i.e. 
		</description>
	<bean id="car" class="com.prasad.springf.Car">
		<constructor-arg value="HONDA"></constructor-arg>

	</bean>




</beans>